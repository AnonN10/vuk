struct VS_IN {
	vec3 position;
	vec2 texcoord;
};

struct VS_OUT {
	vec2 texcoord;
	vec3 col;
};


struct VP {
	mat4 view;
	mat4 projection;
};

VS_OUT opaque::vertex(Attribute::VS_IN vin, Aspect::VP vp, User::mat4 model_matrix, User::vec3 col) {
	VS_OUT vout;
	gl_Position = vp.projection * vp.view * model_matrix * vec4(vin.position, 1.0);
	vout.texcoord = vin.texcoord;
	vout.col = col;
	return vout;
}

struct FS_OUT {
	vec4 color_out;
};

FS_OUT opaque::fragment(VS_OUT vin, User::sampler2D t1, User::vec2 $0ting) {
	FS_OUT fout;
	int $3a = 3;
	float b = 4;
	$4b = 5;
	$2fout.color_out = vec4(texture(t1, $1vin.texcoord).rgb, 1);
	return fout;
}