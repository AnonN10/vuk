// file generated by vush compiler, from ../../tests/probing_param.vush
#version 460
#pragma shader_stage(fragment)
#extension GL_GOOGLE_cpp_style_line_directive : require
#extension GL_GOOGLE_include_directive : require

struct VS_IN {
	vec3 position;
	vec2 texcoord;
};

struct VS_OUT {
	vec2 texcoord;
	vec3 col;
};


struct VP {
	mat4 view;
	mat4 projection;
};



struct FS_OUT {
	vec4 color_out;
};

layout(location = 0) out vec2 _watch_0;
layout(location = 1) out int _watch_1;
layout(location = 2) out float _watch_2;
layout(location = 3) out vec4 _watch_3;
layout(location = 4) out vec2 _watch_4;

layout(std140, binding = 0) uniform _aspect_ {
	VP vp;
} _aspect;
layout(std140, binding = 1) uniform _user_ {
	mat4 model_matrix;
	vec3 col;
	vec2 ting;
} _user;
layout(binding = 1 + 1 + 0) uniform sampler2D t1;
layout(location = 0) in VS_OUT vin;

#line 29 "../../tests/probing_param.vush"
FS_OUT opaque_fragment(VS_OUT vin, sampler2D t1, vec2 ting) {
	_watch_0 = ting;
	FS_OUT fout;
	int a = 3;
	_watch_3 = a;
	float b = 4;
	b = 5;
	_watch_4 = b;
	fout.color_out = vec4(texture(t1, vin.texcoord).rgb, 1);
	_watch_2 = fout.color_out;
	_watch_1 = vin.texcoord;
	return fout;
}
void main() {
		vec2 ting = _user.ting;
	FS_OUT _out = opaque_fragment(vin, t1, ting);
	_color_out_out = _out.color_out;
}