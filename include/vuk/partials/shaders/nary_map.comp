#version 450
#pragma shader_stage(compute)

layout (std430, binding = 0) buffer coherent BufferIn0 {
	uint[] data_in0;
};

layout (std430, binding = 2) buffer coherent BufferIn1 {
	uint[] data_in1;
};

layout (std430, binding = 1) buffer coherent BufferOut {
	uint[] data_out;
};

layout (std430, binding = 4) buffer readonly BufferCount {
	layout(offset = 12) uint n;
};

layout (local_size_x = 64) in;

uint linear_index(uvec3 id){
	uvec3 mp = gl_NumWorkGroups * gl_WorkGroupSize;
	return id.z * mp.y * mp.x + id.y * mp.x + id.x * 1;
}

void main() {
	uint idx = linear_index(gl_GlobalInvocationID);
	if(idx >= n) return;
	data_out[idx] = data_in0[idx] + data_in1[idx];
}